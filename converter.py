from pseudo_prime_check import powerMod
from pseudo_prime_check import isPrime
from pseudo_prime_check import isStrongPseudoprime
import random
import fractions
import uuid
import math
from key_generator import key_maker
from key_generator import egcd
from key_generator import mulinv
from key_generator import prime_maker
from Crypto.Util.number import bytes_to_long, long_to_bytes
import os
import time
from encryptor import encryptor
from encryptor import decryptor

def converter(input_string):
    #accepts string
    lon = ""
    for i in input_string:
        if len(str(ord(i))) == 2:
            x = "0" + str(ord(i))
        elif len(str(ord(i))) == 3:
            x = str(ord(i))
        elif len(str(ord(i))) == 1:
            x = "00" + str(ord(i))
        lon = lon + x
    return long(lon)

#print converter("d")
#print converter("a")

def deconverter(input_long):
    in_string = str(input_long)
    if len(in_string) % 3 == 2:
        in_string = "0" + in_string
    elif len(in_string) % 3 == 1:
        in_string = "00" + in_string
    empt = []
    while len(in_string) != 0:
        thing = in_string[0] + in_string[1] + in_string[2]
        empt.append(thing)
        in_string = in_string[3:]
    end = ""
    for i in empt:
        end = end + chr(long(i))
    return end
e = 65537
n = 7451154292237431997243591688056489005044798142212290781043550041534032381005642786255169224185976298624592853697040642305676831309920303721445334931377115096770378790149106175711246423745279056274191396754823237379344247936932411863633734495266907973949036411143434153185455253822725470040193505335957940578616838809580428800045727760555616953707354769693650955836438859632786878428722782753700325001763553005123437230704053558748588044996072719877910588480343843052947829147141440368647028547846871983582559033204611194483328857384054453881109687343037262558702356391482391664411077406333393262362322936387347156659
d = 2024773895516371308404582516328150704042644767301809459078147957484773222352709040395781142156767198715311566466127482167657944196383274928288142115032653962774977125498045865438478837305334005419641951642685002891324621381949575398316266805410811665289201358714213632514148841346551076429281263050308603746913740190593327353760030384499399580959798930249585860511860871232120134873806044600911083201795840552178925237619220998071485457892459935195381485517082315682023050860519116823994532357162153796846721882296539075874926028087080498475626583311278420562033320852054129279262099035430344972439196353726604015201
message = "The quick brown fox jumps over the lazy dog"
y = encryptor(n, e, converter(message))
print y
z = deconverter(decryptor(n, d, y))
print z
